// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

import NativeModule from './matrix_sdk_base-ffi';
import { UniffiInternalError } from 'uniffi-bindgen-react-native/errors';
import {
  type FfiConverter,
  AbstractFfiConverterArrayBuffer,
  FfiConverterInt32,
} from 'uniffi-bindgen-react-native/ffi-converters';
import { RustBuffer } from 'uniffi-bindgen-react-native/ffi-types';
import {
  initializeWithStringLifter,
  rustCall,
} from 'uniffi-bindgen-react-native/rust-call';

// Get converters from the other files, if any.

// Public interface members begin here.

const stringToArrayBuffer = (s: string): ArrayBuffer =>
  rustCall((status) =>
    NativeModule.uniffi_internal_fn_func_ffi__string_to_arraybuffer(s, status)
  );

const arrayBufferToString = (ab: ArrayBuffer): string =>
  rustCall((status) =>
    NativeModule.uniffi_internal_fn_func_ffi__arraybuffer_to_string(ab, status)
  );

const stringByteLength = (s: string): number =>
  rustCall((status) =>
    NativeModule.uniffi_internal_fn_func_ffi__string_to_byte_length(s, status)
  );

const FfiConverterString = (() => {
  const lengthConverter = FfiConverterInt32;
  type TypeName = string;
  class FFIConverter implements FfiConverter<ArrayBuffer, TypeName> {
    lift(value: ArrayBuffer): TypeName {
      return arrayBufferToString(value);
    }
    lower(value: TypeName): ArrayBuffer {
      return stringToArrayBuffer(value);
    }
    read(from: RustBuffer): TypeName {
      const length = lengthConverter.read(from);
      return from.read(length, arrayBufferToString);
    }
    write(value: TypeName, into: RustBuffer): void {
      const buffer = stringToArrayBuffer(value);
      const numBytes = buffer.byteLength;
      lengthConverter.write(numBytes, into);
      into.write(numBytes, () => stringToArrayBuffer(value));
    }
    allocationSize(value: TypeName): number {
      return lengthConverter.allocationSize(0) + stringByteLength(value);
    }
  }

  return new FFIConverter();
})();
initializeWithStringLifter(FfiConverterString.lift);
